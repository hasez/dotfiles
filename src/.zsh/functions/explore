local _find_opts=(-o)
local _find_opt_type=
local _accept=1
local _query
local _key
local _name

function disable-common-path()
{
    local _parent=$1
    local _path=$2

    if [[ $_path =~ ^$_parent/ ]]; then
        echo -e "\033[90m$_parent/\033[0m${_path:$(( $#_parent + 1 ))}"
    elif [ "$_parent" != "${_parent%/*}" ]; then
        disable-common-path "${_parent%/*}" "$_path"
    else
        echo "$_path"
    fi
}

function ls-tree()
{
    local _path
    local _previous

    while read -r _path
    do
        if [ -z "$_previous" ]; then
            echo "$_path"
        else
            disable-common-path "$_previous" "$_path"
        fi
        _previous=$_path
    done < <(find -L "$PWD" -type d \( -name .git -o -name node_modules \) -prune "${_find_opts[@]}" -print 2>/dev/null | sed -E "s#^$PWD/##")
}

while {
    IFS= read -r _query
    IFS= read -r _key
    IFS= read -r _name
} < <(ls-tree | fzf \
    --header='enter: cd | C-d: show dirs | C-f: show files | C-v: vi | C-i: inline select | C-l: reload | C-x: toggle dry-run' \
    --preview="
        local _path={}
        if [ -d "\$_path" ]; then
            exa --long --classify --color=always --all --header --git --time-style long-iso "\$_path"
        else
            bat --style=changes,numbers --line-range 1:$((LINES - 2)) --color=always "\$_path"
        fi" \
    --query="${_query:-}" \
    --print-query \
    --bind='ctrl-v:execute(vi {} </dev/tty >/dev/tty)' \
    --expect='enter,ctrl-d,ctrl-f,ctrl-i,ctrl-l,ctrl-x'
)
do
    case "$_key" in
        enter)
            if [ -d "$_name" ]; then
                BUFFER=" cd ${(q)_name}"
            else
                BUFFER=" cd ${(q)_name%/*}"
            fi
            ;;
        ctrl-d)
            if [ "$_find_opt_type" = 'd' ]; then
                _find_opt_type=
                _find_opts=(-o)
            else
                _find_opt_type='d'
                _find_opts=(-o -type d)
            fi
            continue
            ;;
        ctrl-f)
            if [ "$_find_opt_type" = 'f' ]; then
                _find_opt_type=
                _find_opts=(-o)
            else
                _find_opt_type='f'
                _find_opts=(-o -type f)
            fi
            continue
            ;;
        ctrl-i)
            LBUFFER+=$_name
            return
            ;;
        ctrl-l)
            continue
            ;;
        ctrl-x)
            _accept=$(( 1 - _accept ))
            continue
            ;;
    esac

    if (( _accept )); then
        zle accept-line
    else
        CURSOR=$#BUFFER
    fi
    return
done
