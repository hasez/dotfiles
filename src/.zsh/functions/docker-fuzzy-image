#!/usr/bin/env zsh
#shellcheck shell=bash

local _accept=1
local _query=
local _key
local _item
local _id

function interaction {
    local _json
    _json=$(
        {
            echo $'ID\tREPOSITORY:TAG\tCREATED\tSIZE'
            docker image ls --format=$'{{.ID}}\t{{.Repository}}:{{.Tag}}\t{{.CreatedSince}}\t{{.Size}}' | sort -t $'\t' -k 2
        } | column -ts $'\t' \
        | fzf \
            --height=$(( $(docker image ls --quiet | wc -l) + 4 )) \
            --header='enter: inspect | C-r: run | C-d: delete | C-i: inline select | C-l: reload | C-x: toggle dry-run' \
            --header-lines=1 \
            --query="$_query" \
            --print-query \
            --bind='enter:execute(
                    local _id=$(cut -c -12 <<<{})
                    docker image inspect "$_id" | jq -C . | less >/dev/tty
                )' \
            --expect='ctrl-r,ctrl-d,ctrl-i,ctrl-l,ctrl-x' \
        | jq -R . | jq -scr .
    )

    local _length
    {
        IFS= read -r _length
        IFS= read -r _query
        IFS= read -r _key
        IFS= read -r _item
    } < <(jq -cr 'length, .[]' <<<"$_json")

    (( _length == 3 ))
}

while interaction
do
    _id=$(cut -c -12 <<<"$_item")

    case "$_key" in
        ctrl-r)
            BUFFER=" docker container run --rm -it $_id"
            ;;
        ctrl-d)
            BUFFER=" docker image rm $_id"
            ;;
        ctrl-i)
            LBUFFER+=$_id
            zle reset-prompt
            return
            ;;
        ctrl-l)
            continue
            ;;
        ctrl-x)
            _accept=$(( 1 - _accept ))
            continue
            ;;
    esac

    zle reset-prompt

    if (( _accept )); then
        zle accept-line
    else
        CURSOR=$#BUFFER
    fi
    return
done

zle reset-prompt
